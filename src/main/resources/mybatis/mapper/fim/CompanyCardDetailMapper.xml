<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="net.smilegate.fim.mappers.fim.companycard.CompanyCardFimMapper">

	<select id="getCompanyCardDetail" resultType="companyCardDetailVO" parameterType="companyCardDetailVO">
		select * from TB_COMPANY_CARD_DETAIL
		where CARD_USE_SEQ = #{cardUseSeq}
		  and COMPANY_SEQ = #{companySeq}
		  and CANCEL_YN = #{cancelYn}
		  and APPR_SEQ = #{apprSeq}
		  and APPR_NO = #{apprNo}
		  and APPR_DATE = #{apprDate}
		  and CARD_CD = #{cardCd}
	</select>

	<select id="getCompanyCardDetailList" resultType="companyCardDetailVO">
		select * from TB_COMPANY_CARD_DETAIL where CARD_USE_SEQ = #{cardUseSeq}
	</select>

	<insert id="saveCompanyCardDetail" parameterType="companyCardDetailVO">
		MERGE TB_COMPANY_CARD_DETAIL as a
		USING ( select
					#{cardUseSeq} as cardUseSeq,
					#{companySeq} as companySeq,
					#{cancelYn} as cancelYn,
					#{apprSeq} as apprSeq,
					#{apprNo} as apprNo,
					#{cardCd} as cardCd,
					#{apprDate} as apprDate) AS b
		ON a.CARD_USE_SEQ = b.cardUseSeq
		AND a.COMPANY_SEQ = b.companySeq
		AND a.CANCEL_YN = b.cancelYn
		AND a.APPR_SEQ = b.apprSeq
		AND a.APPR_NO = b.apprNo
		AND a.CARD_CD = b.cardCd
		AND a.APPR_DATE = b.apprDate
		WHEN MATCHED THEN
			UPDATE set
				COM_CD              = #{comCd},
				COM_NM              = #{comNm},
				CHAIN_NM            = #{chainNm},
				CHAIN_ID            = #{chainId},
				BUDGET_DEPT_CD      = #{budgetDeptCd},
				BUDGET_DEPT_NM      = #{budgetDeptNm},
				BUDGET_ERP_DEPT_SEQ = #{budgetErpDeptSeq},
				USE_USER_ID         = #{useUserId},
				USE_USER_NM         = #{useUserNm},
				USE_ERP_DEPT_SEQ    = #{useErpDeptSeq},
				USE_EMP_NO          = #{useEmpNo},
				SM_KIND_NM      = #{costInfoVO.smKindNm},
				SM_KIND_SEQ     = #{costInfoVO.smKindSeq},
				COST_SEQ        = #{costInfoVO.costSeq},
				COST_NM         = #{costInfoVO.costNm},
				COST_ITEM_CD        = #{costInfoVO.costItemCd},
				COST_ITEM_NM        = #{costInfoVO.costItemNm},
				ACTIVITY_CD         = #{costInfoVO.activityCd},
				ACTIVITY_NM         = #{costInfoVO.activityNm},
				CUST_NAME           = #{costInfoVO.custName},
				USER_NAME           = #{costInfoVO.userName},
				PURPOSE             = #{costInfoVO.purpose},
				BUSI_TRIP_CODE      = #{costInfoVO.busiTripCode},
				BUSI_TRIP_TYPE      = #{costInfoVO.busiTripType},
				START_AREA          = #{costInfoVO.startArea},
				DEST_AREA           = #{costInfoVO.destArea},
				WORK_START          = #{costInfoVO.workStart},
				WORK_END            = #{costInfoVO.workEnd},
				DISTANCE            = #{costInfoVO.distance},
				PERSON_CNT          = #{costInfoVO.personCnt},
				TRANS_AMT           = #{costInfoVO.transAmt},
				PERSON_NAME         = #{costInfoVO.personName},
				SUPPLY_AMT          = #{supplyAmt},
				APPR_TAX            = #{apprTax},
				TIP_AMT             = #{tipAmt},
				APPR_AMT            = #{apprAmt},
				CURR_CD             = #{currCd},
				CUR_AMT             = #{curAmt},
				CHAIN_TYPE          = #{chainType},
				CLOSE_YN            = #{closeYn},
				CHAIN_ADDR          = #{chainAddr},
				MCC_NAME            = #{mccName},
				CHAIN_MASTER        = #{chainMaster},
				LAST_DATE_TIME      = getDate(),
				LAST_USER_ID        = #{lastUserId}
		WHEN NOT MATCHED THEN
			INSERT (
					CARD_USE_SEQ        ,
					COMPANY_SEQ         ,
					CANCEL_YN           ,
					APPR_SEQ            ,
					APPR_NO             ,
					APPR_DATE           ,
					CARD_CD             ,
					COM_CD              ,
					COM_NM              ,
					CHAIN_NM            ,
					CHAIN_ID            ,
					BUDGET_DEPT_CD      ,
					BUDGET_DEPT_NM      ,
					BUDGET_ERP_DEPT_SEQ ,
					USE_USER_ID         ,
					USE_USER_NM         ,
					USE_ERP_DEPT_SEQ    ,
					USE_EMP_NO          ,
					SM_KIND_NM      ,
					SM_KIND_SEQ     ,
					COST_SEQ        ,
					COST_NM         ,
					COST_ITEM_CD        ,
					COST_ITEM_NM        ,
					ACTIVITY_CD         ,
					ACTIVITY_NM         ,
					CUST_NAME           ,
					USER_NAME           ,
					PURPOSE             ,
					BUSI_TRIP_CODE      ,
					BUSI_TRIP_TYPE      ,
					START_AREA          ,
					DEST_AREA           ,
					WORK_START          ,
					WORK_END            ,
					DISTANCE            ,
					PERSON_CNT          ,
					TRANS_AMT           ,
					PERSON_NAME         ,
					SUPPLY_AMT          ,
					APPR_TAX            ,
					TIP_AMT             ,
					APPR_AMT            ,
					CURR_CD             ,
					CUR_AMT             ,
					CHAIN_TYPE          ,
					CLOSE_YN            ,
					CHAIN_ADDR          ,
					MCC_NAME            ,
					CHAIN_MASTER        ,
					LAST_DATE_TIME      ,
					LAST_USER_ID )
			values(
					#{cardUseSeq},
					#{companySeq},
					#{cancelYn},
					#{apprSeq},
					#{apprNo},
					#{apprDate},
					#{cardCd},
					#{comCd},
					#{comNm},
					#{chainNm},
					#{chainId},
					#{budgetDeptCd},
					#{budgetDeptNm},
					#{budgetErpDeptSeq},
					#{useUserId},
					#{useUserNm},
					#{useErpDeptSeq},
					#{useEmpNo},
					#{costInfoVO.smKindNm},
					#{costInfoVO.smKindSeq},
					#{costInfoVO.costSeq},
					#{costInfoVO.costNm},
					#{costInfoVO.costItemCd},
					#{costInfoVO.costItemNm},
					#{costInfoVO.activityCd},
					#{costInfoVO.activityNm},
					#{costInfoVO.custName},
					#{costInfoVO.userName},
					#{costInfoVO.purpose},
					#{costInfoVO.busiTripCode},
					#{costInfoVO.busiTripType},
					#{costInfoVO.startArea},
					#{costInfoVO.destArea},
					#{costInfoVO.workStart},
					#{costInfoVO.workEnd},
					#{costInfoVO.distance},
					#{costInfoVO.personCnt},
					#{costInfoVO.transAmt},
					#{costInfoVO.personName},
					#{supplyAmt},
					#{apprTax},
					#{tipAmt},
					#{apprAmt},
					#{currCd},
					#{curAmt},
					#{chainType},
					#{closeYn},
					#{chainAddr},
					#{mccName},
					#{chainMaster},
					getdate(),
					#{lastUserId});
	</insert>

</mapper>